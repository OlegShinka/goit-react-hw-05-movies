{"version":3,"file":"static/js/544.bb7f68ad.chunk.js","mappings":"sMACaA,E,OAAOC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4D,SCChBC,EAAa,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,SACsB,IAAnBJ,EAAQK,SACPF,EAAAA,EAAAA,KAACT,EAAI,CAAAU,SACFJ,EAAQM,KAAI,SAAAC,GAA0B,IAAvBC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAC3B,OAAIF,GAEAL,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMd,GAAWG,SAClDI,KAFIE,IAQTP,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMd,GAAWG,SAClDK,KAFIC,EAOf,OAKV,C,kHCOA,UAjCa,WACX,IAAAM,GAA6BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlChB,EAAOkB,EAAA,GAAEE,EAASF,EAAA,GACzBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAqBtB,OAnBAG,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAavB,OAbuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGoB,OAHpBF,EAAAC,KAAA,EAEIZ,GAAW,GACXI,GAAS,GAAOO,EAAAE,KAAA,GACWC,EAAAA,EAAAA,MAAe,KAAD,EAAnCJ,EAAYC,EAAAI,KAElBnB,EAAUc,EAAalC,SACvBmC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEAP,GAAS,GAAM,QAEG,OAFHO,EAAAC,KAAA,GAEfZ,GAAW,GAAOW,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,yBAErBU,MAAA,KAAAC,UAAA,EAdc,WACSd,EAAAa,MAAC,KAADC,UAAA,CAexBC,EACF,GAAG,KAGDC,EAAAA,EAAAA,MAAA,OAAA1C,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACHmB,IAAWpB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,IAClBpB,IAASxB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,6BACbD,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,QAASA,MAG3B,C","sources":["components/Movieslist/moviesList.styled.js","components/Movieslist/moviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const List = styled.ul`\n  margin-left: 20px;\n\n  text-decoration: none;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List } from './moviesList.styled';\nexport const MoviesList = ({ results }) => {\n  const location = useLocation();\n  return (\n    <div>\n      {results.length !== 0 && (\n        <List>\n          {results.map(({ title, name, id }) => {\n            if (title) {\n              return (\n                <li key={id}>\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {title}\n                  </Link>\n                </li>\n              );\n            } else {\n              return (\n                <li key={id}>\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {name}\n                  </Link>\n                </li>\n              );\n            }\n          })}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { MoviesList } from 'components/Movieslist/moviesList';\nimport { GetPopMovies } from 'components/api';\nimport { Loader } from 'components/Loader/loader';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [results, setResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function getResult() {\n      try {\n        setLoading(true);\n        setError(false);\n        const responseData = await GetPopMovies();\n\n        setResult(responseData.results);\n        //\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getResult();\n  }, []);\n\n  return (\n    <div>\n      <h2> Trending today</h2>\n      {loading && <Loader />}\n      {error && <p> Reload page please ...</p>}\n      <MoviesList results={results} />\n    </div>\n  );\n};\nexport default Home;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","MoviesList","_ref","results","location","useLocation","_jsx","children","length","map","_ref2","title","name","id","Link","to","concat","state","from","_useState","useState","_useState2","_slicedToArray","setResult","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","_getResult","_asyncToGenerator","_regeneratorRuntime","_callee","responseData","_context","prev","next","GetPopMovies","sent","t0","finish","stop","apply","arguments","getResult","_jsxs","Loader"],"sourceRoot":""}