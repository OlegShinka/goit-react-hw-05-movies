{"version":3,"file":"static/js/557.d42a4239.chunk.js","mappings":"oMAEaA,EAAa,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,SACsB,IAAnBJ,EAAQK,SACPF,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAQM,KAAI,SAAAC,GAA0B,IAAvBC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAC3B,OAAIF,GAEAL,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMd,GAAWG,SAClDI,KAFIE,IAQTP,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMd,GAAWG,SAClDK,KAFIC,EAOf,OAKV,C,sICDA,EA7BkB,SAAHX,GAA2B,IAArBiB,EAAajB,EAAbiB,cACnBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAYtB,OACEhB,EAAAA,EAAAA,KAAA,OAAAC,UACEmB,EAAAA,EAAAA,MAAA,QAAMC,SAPW,SAAAC,GACnBA,EAAIC,iBACJ,IAAQL,EAAUI,EAAIE,OAAOC,SAArBP,MACRL,EAAcK,EAChB,EAGiCjB,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SACE0B,KAAK,OACLpB,KAAK,QACLY,MAAOA,EACPS,SAjBa,SAAAL,GACnB,IAAQJ,EAAUI,EAAIE,OAAdN,MACRC,EAASD,EAAMU,cACjB,EAeQC,aAAa,UAEf7B,EAAAA,EAAAA,KAAA,UAAQ0B,KAAK,SAAQzB,SAAC,eAI9B,E,iBCmBA,EAzCe,WACb,IAAAa,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCjB,EAAOmB,EAAA,GAAEc,EAAUd,EAAA,GAG1Be,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAhB,EAAAA,EAAAA,GAAAc,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GA6BpC,OAlBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAaI,IAAI,SAMP,SAAAC,IAMvB,OANuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAE+BC,EAAAA,EAAAA,IAAUV,GAAO,KAAD,EAArCM,EAAYC,EAAAI,KAElBlB,EAAWa,EAAa9C,SAAS+C,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,iCAAAA,EAAAM,OAAA,GAAAR,EAAA,mBAEpCS,MAAA,KAAAC,UAAA,CAVa,KAAVf,GAEH,WAEuBE,EAAAY,MAAC,KAADC,UAAA,CAQxBC,EACF,GAAG,CAACnB,KAGFd,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAACsD,EAAS,CAACzC,cA9BK,SAAAwB,GAClB,GAAc,KAAVA,EACF,OAAOF,EAAgB,CAAC,GAExBA,EAAgB,CAAEE,MAAOA,EAAMnB,OAGnC,KAwBIlB,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,QAASA,MAG3B,C","sources":["components/Movieslist/moviesList.jsx","components/Searchbar/searchBar.jsx","pages/Movies/movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ results }) => {\n  const location = useLocation();\n  return (\n    <div>\n      {results.length !== 0 && (\n        <ul>\n          {results.map(({ title, name, id }) => {\n            if (title) {\n              return (\n                <li key={id}>\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {title}\n                  </Link>\n                </li>\n              );\n            } else {\n              return (\n                <li key={id}>\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {name}\n                  </Link>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\nconst SearchBar = ({ onChangeQuery }) => {\n  const [value, setValue] = useState('');\n  //контрольована форма\n  const handleChange = evt => {\n    const { value } = evt.target;\n    setValue(value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const { value } = evt.target.elements;\n    onChangeQuery(value);\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"value\"\n          value={value}\n          onChange={handleChange}\n          autoComplete=\"true\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import { MoviesList } from 'components/Movieslist/moviesList';\nimport SearchBar from 'components/Searchbar/searchBar';\nimport { GetMovies } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [results, setResults] = useState([]);\n  //const [queryString, setQueryString] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const updateQuery = query => {\n    if (query === '') {\n      return setSearchParams({});\n    } else {\n      setSearchParams({ query: query.value });\n    }\n    // setQueryString(query.value);\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    //відмина 1-го рендера сторінки по умові, якщо пустий рядок запиту\n    if (query === '') {\n      return;\n    }\n\n    async function getResult() {\n      try {\n        const responseData = await GetMovies(query);\n\n        setResults(responseData.results);\n      } catch (error) {}\n    }\n\n    getResult();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <h2>Movies</h2>\n      <SearchBar onChangeQuery={updateQuery} />\n      <MoviesList results={results} />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["MoviesList","_ref","results","location","useLocation","_jsx","children","length","map","_ref2","title","name","id","Link","to","concat","state","from","onChangeQuery","_useState","useState","_useState2","_slicedToArray","value","setValue","_jsxs","onSubmit","evt","preventDefault","target","elements","type","onChange","toLowerCase","autoComplete","setResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","query","get","_getResult","_asyncToGenerator","_regeneratorRuntime","_callee","responseData","_context","prev","next","GetMovies","sent","t0","stop","apply","arguments","getResult","SearchBar"],"sourceRoot":""}