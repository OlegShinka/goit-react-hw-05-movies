{"version":3,"file":"static/js/439.81a9aa0d.chunk.js","mappings":"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","sources":["pages/MovieDetails/movieDetails.jsx"],"sourcesContent":["import { GetMovieDetails } from 'components/api';\nimport { Suspense } from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [title, setTitle] = useState('');\n  const [popularity, setPopularity] = useState('');\n  const [poster, setPoster] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genresName, setGenresName] = useState('');\n  const [genresSubName, setGenresSubName] = useState('');\n  const location = useLocation();\n  //'?.'-це так зв Елвіс, те саме location.state && location.state.from\n  // в момент 1 рендеру useRef зберігає location звідки ми перейшли в MovieDetals\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const Pop = Math.round(popularity);\n  useEffect(() => {\n    async function getResult() {\n      try {\n        const responseData = await GetMovieDetails(movieId);\n\n        setTitle(responseData.title);\n        setPopularity(responseData.popularity);\n        setPoster(responseData.poster_path);\n        setOverview(responseData.overview);\n        setGenresName(responseData.genres[0].name);\n        setGenresSubName(responseData.genres[1].name);\n      } catch (error) {}\n    }\n\n    getResult();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <h2> {title}</h2>\n      <h3>User Scores: {`${Pop}%`} </h3>\n      <h3>\n        Genres: <span>{genresName}</span>\n        <span> {genresSubName}</span>\n      </h3>\n      <img src={`https://image.tmdb.org/t/p/w300${poster}`} alt={title} />\n      <p>About: {overview}</p>\n      <Link to=\"cast\">Cast </Link>\n      <Link to=\"reviews\">Reviews </Link>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","popularity","setPopularity","_useState5","_useState6","poster","setPoster","_useState7","_useState8","overview","setOverview","_useState9","_useState10","genresName","setGenresName","_useState11","_useState12","genresSubName","setGenresSubName","location","useLocation","backLinkLocationRef","useRef","state","from","Pop","Math","round","useEffect","_getResult","_asyncToGenerator","_regeneratorRuntime","_callee","responseData","_context","prev","next","GetMovieDetails","sent","poster_path","genres","name","t0","stop","apply","arguments","getResult","_jsxs","children","_jsx","Link","to","current","concat","src","alt","Suspense","fallback","Outlet"],"sourceRoot":""}